<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljn.mall.dao.IProductDao">
  <resultMap id="BaseResultMap" type="com.ljn.mall.domain.Product">
    <id column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="marketPrice" jdbcType="DOUBLE" property="marketPrice" />
    <result column="shopPrice" jdbcType="DOUBLE" property="shopPrice" />
    <result column="pimage" jdbcType="VARCHAR" property="pimage" />
    <result column="pdate" jdbcType="DATE" property="pdate" />
    <result column="isHot" jdbcType="INTEGER" property="isHot" />
    <result column="pdesc" jdbcType="VARCHAR" property="pdesc" />
    <result column="pflag" jdbcType="INTEGER" property="pflag" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
  </resultMap>
  <resultMap type="com.ljn.mall.domain.Comment" id="CommentBaseMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="commentor" jdbcType="VARCHAR" property="commentor" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="commentHeader" jdbcType="VARCHAR" property="commentHeader" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
  </resultMap>
  <resultMap type="com.ljn.mall.domain.Reply" id="ReplyBaseMap">
  	<id column="id" jdbcType="INTEGER" property="id"/>
  	<result column="replyer" jdbcType="VARCHAR" property="replyer"/>
  	<result column="date" jdbcType="TIMESTAMP" property="date"/>
  	<result column="replyHeader" jdbcType="VARCHAR" property="replyHeader"/>
  	<result column="content" jdbcType="VARCHAR" property="content"/>
  	<result column="reply_for" jdbcType="VARCHAR" property="replyfor"/>
  	<result column="comment_id" jdbcType="INTEGER" property="commentId"/>
  	<result column="reply_id" jdbcType="INTEGER" property="replyId"/>
  	<result column="pid" jdbcType="VARCHAR" property="pid"/>
  </resultMap>
  <delete id="deleteById" parameterType="java.lang.String">
    delete from product
    where pid = #{pid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ljn.mall.domain.Product">
    insert into product (pid, pname, marketPrice, shopPrice, pimage, pdate, 
      isHot, pdesc, pflag, cid)
    values (#{pid,jdbcType=VARCHAR}, #{pname,jdbcType=VARCHAR}, #{marketPrice,jdbcType=DOUBLE}, 
      #{shopPrice,jdbcType=DOUBLE}, #{pimage,jdbcType=VARCHAR}, #{pdate,jdbcType=DATE}, 
      #{isHot,jdbcType=INTEGER}, #{pdesc,jdbcType=VARCHAR}, #{pflag,jdbcType=INTEGER}, 
      #{cid,jdbcType=VARCHAR})
  </insert>
  <update id="updateById" parameterType="com.ljn.mall.domain.Product">
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      marketPrice = #{marketPrice,jdbcType=DOUBLE},
      shopPrice = #{shopPrice,jdbcType=DOUBLE},
      pimage = #{pimage,jdbcType=VARCHAR},
      pdate = #{pdate,jdbcType=DATE},
      isHot = #{isHot,jdbcType=INTEGER},
      pdesc = #{pdesc,jdbcType=VARCHAR},
      pflag = #{pflag,jdbcType=INTEGER},
      cid = #{cid,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select pid, pname, marketPrice, shopPrice, pimage, pdate, isHot, pdesc, pflag, 
    cid
    from product
    where pid = #{pid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select pid, pname, marketPrice, shopPrice, pimage, pdate, isHot, pdesc, pflag, cid
    from product
  </select>
  <select id="selectNewProducts" resultMap="BaseResultMap">
  	select * from product where pflag=0 order by pdate desc limit 0,9
  </select>
  <select id="selectHotProducts" resultMap="BaseResultMap">
  	select * from product where pflag=0 and isHot=1 order by pdate desc limit 0,9
  </select>
  <select id="selectBycidWithPage" resultMap="BaseResultMap">
  	select * from product where cid=#{cid} and pflag=0 limit #{startIndex},12
  </select>
  <select id="pagecount" parameterType="java.lang.String" resultType="int">
  	select count(*) from product where cid=#{cid} 
  </select>
  <select id="findAllProductsWithPage" resultMap="BaseResultMap">
    select * from product where pflag=0 limit #{startIndex},6
  </select>
  <select id="findTotalCount" resultType="int">
  	select count(*) from product where pflag=0
  </select>
  <update id="updatepflagByID" parameterType="com.ljn.mall.domain.Product">
  	 update product set pflag=1 where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <select id="selectBypflag" resultMap="BaseResultMap">
    select * from product where pflag=1 limit #{startIndex},6
  </select>
  <select id="findDownProCount" resultType="int">
  	select count(*) from product where pflag=1
  </select>
  <update id="updatepflagTo0ByID" parameterType="com.ljn.mall.domain.Product">
  	 update product set pflag=0 where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <select id="findProduct" resultMap="BaseResultMap">
  	select * from product where pname like "%"#{key}"%" and pflag=0 limit #{startIndex},12
  </select>
  <select id="findkeyProductCount" resultType="int" parameterType="string">
  	select count(*) from product where pname like "%"#{key}"%" and pflag=0
  </select>
  
  <!-- 增加一条评论 -->
  <insert id="insertComment">
  	insert into comment(
  		commentor,
  		date,
  		commentHeader,
  		content,
  		pid
  	) values (
  		#{commentor},
  		sysdate(),
  		#{commentHeader},
  		#{content},
  		#{pid}
  	)
  </insert>
  <!-- 增加一条回复 -->
  <insert id="insertReply">
  	insert into reply(
  		replyer,
  		date,
  		replyHeader,
  		content,
  		reply_for,
  		comment_id,
  		reply_id,
  		pid
  	) values (
  		#{replyer},
  		sysdate(),
  		#{replyHeader},
  		#{content},
  		#{replyfor},
  		#{commentId},
  		#{replyId},
  		#{pid}
  	)
  </insert>
  <!-- 查询评论列表 -->
  <select id="findComments" resultMap="CommentBaseMap">
  	select * from comment<!--  order by date desc -->
  </select>
  <!-- 查询回复列表 -->
  <select id="findReplys" resultMap="ReplyBaseMap">
  	select * from reply<!--  order by date desc -->
  </select>
</mapper>